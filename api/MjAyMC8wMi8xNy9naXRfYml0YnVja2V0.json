{"title":"Git 命令使用场景及说明","date":"2020-02-17T12:06:42.497Z","date_formatted":{"ll":"Feb 17, 2020","L":"02/17/2020","MM-DD":"02-17"},"link":"2020/02/17/git_bitbucket","comments":true,"tags":["Git"],"categories":["编程"],"updated":"2020-02-17T12:10:17.522Z","content":"<h2><span id=\"相关软件\">相关软件</span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h2><p><a href=\"https://git-scm.com\" target=\"_blank\" rel=\"noopener\">Git</a> &nbsp; <a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"noopener\">Bitbucket</a> &nbsp; <a href=\"https://www.sourcetreeapp.com/\" target=\"_blank\" rel=\"noopener\">Sourcetree</a></p>\n<h2><span id=\"sourcetree-工具介绍\">Sourcetree 工具介绍</span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h2><p>介绍 Git 命令前，查阅一下 Sourcetree 主界面功能按钮。如下图。</p>\n<ul>\n<li><p>Sourcetree 主界面介绍</p>\n<p> <img src=\"/images/git_bitbucket/03_Sourcetree_界面按钮.png\" alt=\"Sourcetree 主界面功能\" class=\"article-img\"></p>\n</li>\n</ul>\n<h2><span id=\"工作区与暂存区介绍\">工作区与暂存区介绍</span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h2><ol>\n<li><p>工作区与暂存区</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本地仓库: git init初始化的文件夹</span><br><span class=\"line\">&gt; 工作区: 当前文件夹(除隐藏目录外)</span><br><span class=\"line\">&gt; 版本库: .git目录</span><br><span class=\"line\">   &gt; 暂存区: stage或index文件夹</span><br><span class=\"line\">   &gt; 分支: .git目录下master、develop、...</span><br><span class=\"line\">   &gt; ...</span><br></pre></td></tr></table></div></figure>\n<p><img src=\"/images/git_bitbucket/工作区与暂存区.png\" alt=\"hello\" class=\"article-img\"></p>\n</li>\n</ol>\n<h2><span id=\"git-命令介绍\">Git 命令介绍</span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h2><ol>\n<li><a href=\"2020/02/17/git_bitbucket#git-init\">创建仓库&gt; git init</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-clone\">克隆仓库&gt; git clone</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-status\">获取仓库文件状态&gt; git status</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-log\">显示版本记录&gt; git log/reflog</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-add\">增加文件&gt; git add</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-rm\">删除文件&gt; git rm</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-mv\">重命名文件&gt; git mv</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-commit\">提交变更&gt; git commit</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-diff\">版本比对&gt; git diff</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-reset\">恢复版本&gt; git reset</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-stash\">临时储存工作区&gt; git stash</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-tag\">标签管理&gt; git tag</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-branch\">创建/删除分支&gt; git branch</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-checkout\">切换分支&gt; git checkout</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-merge\">合并分支&gt; git merge</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-pull\">拉取远程仓库分支最新版本&gt; git pull</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-push\">推送到远程对应仓库分支&gt; git push</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-fix-conflict\">常见问题：如何解决冲突</a></li>\n<li><a href=\"2020/02/17/git_bitbucket#git-help\">命令行文档&gt; git help</a></li>\n</ol>\n<h3><span id=\"创建仓库\"><span id=\"git-init\">创建仓库</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>创建仓库（版本库，以下都以仓库代替）有以下两种。<br>工作过程中，一般为第一种，由管理人员手动在 bitbucket 所在服务器中进行仓库创建并初始化。</p>\n<ol>\n<li><p>本地，仓库创建并初始化 [ x ]</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ mkdir git_bitbucket &amp;&amp; <span class=\"built_in\">cd</span> git_bitbucket</span><br><span class=\"line\">~$ git init</span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /Users/night/git_bitbucket/.git/</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>远程服务器，仓库创建并初始化</p>\n<p><img src=\"/images/git_bitbucket/01_仓库创建并初始化.png\" alt=\"仓库创建并初始化\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"克隆仓库\"><span id=\"git-clone\">克隆仓库</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>克隆仓库指的是将服务器仓库映射到本地目录。方式有两种。</p>\n<ol>\n<li><p>使用命令行进行克隆</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git clone 命令说明</span></span><br><span class=\"line\"><span class=\"comment\"># git clone [源仓库地址] [本地目录]</span></span><br><span class=\"line\">~$ git <span class=\"built_in\">clone</span> https://wangwg@bitbucket.org/wangwg/git_bitbucket.git ~/git_bitbucket</span><br><span class=\"line\">Cloning into <span class=\"string\">'/Users/night/git_bitbucket'</span>...</span><br><span class=\"line\">remote: Counting objects: 3, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (2/2), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Total 3 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">Unpacking objects: 100% (3/3), <span class=\"keyword\">done</span>.</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>bitbucket 网址仓库中使用 Sourcetree 进行克隆</p>\n<p><img src=\"/images/git_bitbucket/02_sourcetree_clone.png\" alt=\"使用 Sourcetree 克隆\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"获取仓库文件状态\"><span id=\"git-status\">获取仓库文件状态</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>获取当前工作区的所有变更。方式有两种。</p>\n<ol>\n<li><p>使用命令行查看文件变更</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up to date with <span class=\"string\">'origin/master'</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 Sourcetree 界面查看文件变更</p>\n<p><img src=\"/images/git_bitbucket/05_sourcetree_status.png\" alt=\"使用 Sourcetree 查看变更\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"显示版本记录\"><span id=\"git-log\">显示版本记录</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>查看当前分支的版本记录。方式有两种。</p>\n<ol>\n<li><p>命令行方式当前分支的版本记录</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 有两种命令均可查询当前分支的版本记录</span></span><br><span class=\"line\"><span class=\"comment\">#   * git log     [版本日志信息]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git reflog  [简易版本日志信息]</span></span><br><span class=\"line\">~$ git <span class=\"built_in\">log</span></span><br><span class=\"line\">commit d27ca7d0c8c54065ac0c7bef58c35b62744ff96b (HEAD -&gt; master)</span><br><span class=\"line\">Author: xxx &lt;xxx@qq.com&gt;</span><br><span class=\"line\">Date:   Fri Feb 14 17:52:22 2020 +0800</span><br><span class=\"line\">   git commit</span><br><span class=\"line\"></span><br><span class=\"line\">commit 3c7c3fb9362f9f8df65567e6f9ecbeea0094c89b</span><br><span class=\"line\">Author: xxx &lt;xxx@qq.com&gt;</span><br><span class=\"line\">Date:   Fri Feb 14 17:23:25 2020 +0800</span><br><span class=\"line\">   git add</span><br><span class=\"line\"></span><br><span class=\"line\">commit e7347a923aef9500112c970c91b24cf0fd05726c (origin/master, origin/HEAD)</span><br><span class=\"line\">Author: xxx &lt;xxx@qq.com&gt;</span><br><span class=\"line\">Date:   Thu Feb 13 09:59:24 2020 +0000</span><br><span class=\"line\">   README.md created online with Bitbucket</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">~$ git reflog</span><br><span class=\"line\">d27ca7d (HEAD -&gt; master) HEAD@&#123;0&#125;: commit: git commit</span><br><span class=\"line\">3c7c3fb HEAD@&#123;1&#125;: commit: git add</span><br><span class=\"line\">e7347a9 (origin/master, origin/HEAD) HEAD@&#123;2&#125;: <span class=\"built_in\">clone</span>: from https://wangwg@bitbucket.org/wangwg/git_bitbucket.git</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 sourcetree 进行当前分支的版本记录</p>\n<p><img src=\"/images/git_bitbucket/08_sourcetree_log.png\" alt=\"使用 Sourcetree 查看变更\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"增加文件\"><span id=\"git-add\">增加文件</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>Git 要求提交文件至新版本时，所有文件必须增加至暂存区。增加文件方式有两种</p>\n<ol>\n<li><p>命令行方式增加文件至暂存区</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git add 增加文件与 linux 创建文件的区别。（使用 git status 观察）</span></span><br><span class=\"line\">~$ touch add_demo.txt</span><br><span class=\"line\">~$ git status</span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">(use <span class=\"string\">\"git add &lt;file&gt;...\"</span> to include <span class=\"keyword\">in</span> what will be committed)</span><br><span class=\"line\">   add_demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># git add 命令说明: 增加文件变更至暂存区，以备可以执行提交。</span></span><br><span class=\"line\"><span class=\"comment\">#   * git add file1 file2 ...  [按文件]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git add .                [按目录]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git add --A              [工作区所有文件变更]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git add -u               [工作区所有上版本文件变更]</span></span><br><span class=\"line\">~$ git add add_demo.txt</span><br><span class=\"line\">~$ git status</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">(use <span class=\"string\">\"git reset HEAD &lt;file&gt;...\"</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">   new file:   add_demo.txt</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 Sourcetree 界面增加文件, <strong>但是在点击 commit 按钮前执行 git add 操作。</strong></p>\n<p><img src=\"/images/git_bitbucket/04_git_add.png\" alt=\"使用 Sourcetree 增加文件\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"删除文件\"><span id=\"git-rm\">删除文件</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>“git rm file” 删除文件指的是删除当前版本库中的某个文件。而手动删除文件指的是删除本地工作区的文件，与 git 版本库暂存区无关。具体区别见示例。</p>\n<ul>\n<li><p>git rm 与 rm 的区别</p>\n <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ git status</span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\">~$ ls</span><br><span class=\"line\">README.md    add_demo.txt</span><br><span class=\"line\"><span class=\"comment\"># 手动删除文件</span></span><br><span class=\"line\">~$ rm -f add_demo.txt</span><br><span class=\"line\">~$ git status</span><br><span class=\"line\">Changes not staged <span class=\"keyword\">for</span> commit:</span><br><span class=\"line\">(use <span class=\"string\">\"git add/rm &lt;file&gt;...\"</span> to update what will be committed)</span><br><span class=\"line\">(use <span class=\"string\">\"git checkout -- &lt;file&gt;...\"</span> to discard changes <span class=\"keyword\">in</span> working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">   deleted:    add_demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use <span class=\"string\">\"git add\"</span> and/or <span class=\"string\">\"git commit -a\"</span>)</span><br><span class=\"line\">~$</span><br><span class=\"line\"><span class=\"comment\"># 删除版本库中文件</span></span><br><span class=\"line\">~$ git rm -f add_demo.txt</span><br><span class=\"line\">rm <span class=\"string\">'add_demo.txt'</span></span><br><span class=\"line\">~$ git status</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">(use <span class=\"string\">\"git reset HEAD &lt;file&gt;...\"</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">   deleted:    add_demo.txt</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n<h3><span id=\"重命名文件\"><span id=\"git-mv\">重命名文件</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>与 “git rm” 类似。 “git mv file” 指的是重命名当前版本库中的某个文件。而手动重命名文件指的是重命名本地工作区的文件，相当于在版本库中删除源文件再创建新文件。具体区别见示例。</p>\n<ul>\n<li><p>git mv 与 mv 的区别</p>\n <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ git status</span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\">~$ ls</span><br><span class=\"line\">README.md    add_demo.txt</span><br><span class=\"line\"><span class=\"comment\"># 手动重命名文件</span></span><br><span class=\"line\">~$ mv README.md README_mv.md</span><br><span class=\"line\">~$ git status</span><br><span class=\"line\">Changes not staged <span class=\"keyword\">for</span> commit:</span><br><span class=\"line\">(use <span class=\"string\">\"git add/rm &lt;file&gt;...\"</span> to update what will be committed)</span><br><span class=\"line\">(use <span class=\"string\">\"git checkout -- &lt;file&gt;...\"</span> to discard changes <span class=\"keyword\">in</span> working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">   deleted:    README.md</span><br><span class=\"line\"></span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">(use <span class=\"string\">\"git add &lt;file&gt;...\"</span> to include <span class=\"keyword\">in</span> what will be committed)</span><br><span class=\"line\"></span><br><span class=\"line\">   README_mv.md</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use <span class=\"string\">\"git add\"</span> and/or <span class=\"string\">\"git commit -a\"</span>)</span><br><span class=\"line\">~$</span><br><span class=\"line\"><span class=\"comment\"># 重命名版本库中文件</span></span><br><span class=\"line\">~$ git mv README.md README_mv.md</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">(use <span class=\"string\">\"git reset HEAD &lt;file&gt;...\"</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">   renamed:    README.md -&gt; README_mv.md</span><br></pre></td></tr></table></div></figure>\n</li>\n</ul>\n<h3><span id=\"提交变更\"><span id=\"git-commit\">提交变更</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>“git commit” 提交暂存区中的文件变更，生成本地仓库新版本，版本号为 hash 值。本地提交方式有两种。</p>\n<ol>\n<li><p>命令行方式提交变更至本地仓库</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ git status</span><br><span class=\"line\">Changes not staged <span class=\"keyword\">for</span> commit:</span><br><span class=\"line\">(use <span class=\"string\">\"git add/rm &lt;file&gt;...\"</span> to update what will be committed)</span><br><span class=\"line\">(use <span class=\"string\">\"git checkout -- &lt;file&gt;...\"</span> to discard changes <span class=\"keyword\">in</span> working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">   deleted:    README.md</span><br><span class=\"line\"></span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">(use <span class=\"string\">\"git add &lt;file&gt;...\"</span> to include <span class=\"keyword\">in</span> what will be committed)</span><br><span class=\"line\"></span><br><span class=\"line\">   README_mv.md</span><br><span class=\"line\"><span class=\"comment\"># git 提交前需要增加文件变更至暂存区</span></span><br><span class=\"line\">~$ git add .</span><br><span class=\"line\">~$ git commit -m <span class=\"string\">\"test git commit\"</span></span><br><span class=\"line\">[master d27ca7d] git commit</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> rename README.md =&gt; README_mv.md (100%)</span><br><span class=\"line\"><span class=\"comment\"># 查看提交的版本，版本号为 hash 值 d27ca7d</span></span><br><span class=\"line\">~$ git reflog | grep <span class=\"string\">\"test git commit\"</span></span><br><span class=\"line\">d27ca7d HEAD@&#123;0&#125;: commit: git commit</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 sourcetree 进行提交变更</p>\n<p><img src=\"/images/git_bitbucket/06_sourcetree_commit.png\" alt=\"使用 Sourcetree 进行提交变更\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"版本比对\"><span id=\"git-diff\">版本比对</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>“git diff” 命令作用是查看不同版本间的差异性。方式有使用命令行及 sourcetree 两种。</p>\n<ol>\n<li><p>使用命令行进行版本比对</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git diff 命令使用说明</span></span><br><span class=\"line\"><span class=\"comment\">#   * git diff                         [比较当前文件夹与当前 HEAD 版本所有文件的区别]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git diff file                    [比较当前文件夹与当前 HEAD 版本的文件 file 的区别]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git diff version1 version2       [比较版本 version1 和 2 中所有文件的区别]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git diff file version1 version2  [比较版本 version1 和 2 中的文件 file 的区别]</span></span><br><span class=\"line\">~$ git diff</span><br><span class=\"line\">diff --git a/README_mv.md b/README_mv.md</span><br><span class=\"line\">deleted file mode 100644</span><br><span class=\"line\">index 39af52c..0000000</span><br><span class=\"line\">--- a/README_mv.md</span><br><span class=\"line\">+++ /dev/null</span><br><span class=\"line\">@@ -1,29 +0,0 @@</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git diff README_mv.md</span><br><span class=\"line\">diff --git a/README_mv.md b/README_mv.md</span><br><span class=\"line\">index 39af52c..498da56 100644</span><br><span class=\"line\">--- a/README_mv.md</span><br><span class=\"line\">+++ b/README_mv.md</span><br><span class=\"line\">@@ -1,4 +1,5 @@</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git diff d27ca7d e7347a9</span><br><span class=\"line\">diff --git a/README_mv.md b/README.md</span><br><span class=\"line\">similarity index 100%</span><br><span class=\"line\">rename from README_mv.md</span><br><span class=\"line\">rename to README.md</span><br><span class=\"line\">diff --git a/add_demo.txt b/add_demo.txt</span><br><span class=\"line\">deleted file mode 100644</span><br><span class=\"line\">index e69de29..0000000</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git diff d27ca7d e7347a9 README.md</span><br><span class=\"line\">diff --git a/README.md b/README.md</span><br><span class=\"line\">index 498da56..39af52c 100644</span><br><span class=\"line\">--- a/README.md</span><br><span class=\"line\">+++ b/README.md</span><br><span class=\"line\">@@ -1,5 +1,4 @@</span><br><span class=\"line\">...</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 sourcetree 进行版本比对</p>\n<p><img src=\"/images/git_bitbucket/07_sourcetree_diff.png\" alt=\"使用 Sourcetree 进行版本比对\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"恢复版本\"><span id=\"git-reset\">恢复版本</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>恢复版本，或者说切换版本。方式有使用命令行及 sourcetree 两种。</p>\n<ol>\n<li><p>使用命令行进行版本切换</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ git reflog</span><br><span class=\"line\">83ac3e1 (HEAD -&gt; master) HEAD@&#123;2&#125;: commit: 0----</span><br><span class=\"line\">d27ca7d HEAD@&#123;4&#125;: commit: git commit</span><br><span class=\"line\">3c7c3fb HEAD@&#123;10&#125;: commit: git add</span><br><span class=\"line\">e7347a9 (origin/master, origin/HEAD) HEAD@&#123;21&#125;: <span class=\"built_in\">clone</span>: from https://wangwg@bitbu...</span><br><span class=\"line\"><span class=\"comment\"># 恢复版本至 git add 版本 [3c7c3fb]</span></span><br><span class=\"line\"><span class=\"comment\"># 简易用法如下：</span></span><br><span class=\"line\">~$ git reset --hard 3c7c3fb</span><br><span class=\"line\">HEAD is now at 3c7c3fb git add</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 sourcetree 进行版本切换</p>\n<p><img src=\"/images/git_bitbucket/09_sourcetree_reset.png\" alt=\"使用 Sourcetree 进行版本切换\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"临时储存工作区\"><span id=\"git-stash\">临时储存工作区</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>当工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该 bug。 </p>\n<p>stash 临时储存工作区功能主要为了应急修复 bug，可以将当前工作现场“储藏”起来，等以后恢复现场后继续工作。常见场景如下：</p>\n   <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 当前分支为 develop，正在工作中，假设修订文件 README.md</span></span><br><span class=\"line\"><span class=\"comment\"># 现在有一个 bug 需要在 master 分支上修复，此时做法如下：</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 储藏当前工作区</span></span><br><span class=\"line\">~$ git branch</span><br><span class=\"line\">* develop</span><br><span class=\"line\">  master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 储藏当前工作区</span></span><br><span class=\"line\">~$ git stash save <span class=\"string\">\"save_cur_msg\"</span></span><br><span class=\"line\">~$ git stash list</span><br><span class=\"line\">stash@&#123;0&#125;: On master: save_cur_msg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># git stash show stash@&#123;n&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 显示第 n 个储藏区的变更内容，最后一个参数不写默认显示第一个</span></span><br><span class=\"line\">~$ git stash show</span><br><span class=\"line\">add_demo.txt | 1 +</span><br><span class=\"line\">1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换 master, 拉取 bug 所在版本</span></span><br><span class=\"line\">~$ git checkout master</span><br><span class=\"line\">~$ git pull</span><br><span class=\"line\"><span class=\"comment\"># ... hack ... ... fix ...</span></span><br><span class=\"line\">~$ git push</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修复 bug 后推送至远程，回到 develop 分支，继续工作</span></span><br><span class=\"line\">~$ git checkout develop</span><br><span class=\"line\"><span class=\"comment\"># develop 环境是干净的</span></span><br><span class=\"line\">~$ git status</span><br><span class=\"line\">On branch develop</span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"><span class=\"comment\"># 恢复工作区</span></span><br><span class=\"line\">~$ git stash pop</span><br><span class=\"line\"><span class=\"comment\"># ... hack ...</span></span><br></pre></td></tr></table></div></figure>\n<h3><span id=\"标签管理\"><span id=\"git-tag\">标签管理</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>标签管理，依据提交的版本认为确认是否增加标签，需要填充标签信息。建议在 bitbucket 网页上 merge 之后手动增加符合格式要求的标签，尽量避免删除标签行为。</p>\n<ul>\n<li><p>本地标签管理方式两种如下。</p>\n<ol>\n<li><p>命令行</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地标签管理命令使用说明</span></span><br><span class=\"line\"><span class=\"comment\">#   * git tag                     [显示标签列表]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git tag \"tag_name\"          [当前版本增加标签 \"tag_name\"]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git tag \"tag_info\" version  [给 version 版本增加标签 \"tag_name\"]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git tag -d \"tag_name\"       [删除标签 \"tag_name\"]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git show \"tag_name\"         [查看标签 \"tag_name\" 信息]</span></span><br><span class=\"line\">~$ git tag <span class=\"string\">\"tag_test_001_20200214\"</span></span><br><span class=\"line\">~$ git tag <span class=\"string\">\"old_label\"</span> e7347a9</span><br><span class=\"line\">~$ git tag</span><br><span class=\"line\">old_label</span><br><span class=\"line\">tag_test_001_20200214</span><br><span class=\"line\">~$ git tag -d <span class=\"string\">\"tag_test_001_20200214\"</span></span><br><span class=\"line\">~$ git tag</span><br><span class=\"line\">old_label</span><br><span class=\"line\">~$ git show old_label</span><br><span class=\"line\">commit e7347a923aef9500112c970c91b24cf0fd05726c (tag: old_label)</span><br><span class=\"line\">Author: xxx &lt;xxx@qq.com&gt;</span><br><span class=\"line\">Date:   Thu Feb 13 09:59:24 2020 +0000</span><br><span class=\"line\">   README.md created online with Bitbucket</span><br><span class=\"line\"></span><br><span class=\"line\">diff --git a/README.md b/README.md</span><br><span class=\"line\">...</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>使用 sourcetree 标签管理</p>\n<p><img src=\"/images/git_bitbucket/10_sourcetree_tag_add.png\" alt=\"使用 Sourcetree 添加标签\" class=\"article-img\"><br><img src=\"/images/git_bitbucket/10_sourcetree_tag_list_del.png\" alt=\"使用 Sourcetree 查看标签列表及删除标签\" class=\"article-img\"></p>\n</li>\n</ol>\n</li>\n<li><p>远程标签管理方式两种如下。</p>\n<ol>\n<li><p>命令行</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 远程相关标签管理命令使用说明</span></span><br><span class=\"line\"><span class=\"comment\">#   * git push origin &lt;tag_name&gt;  [推送标签 tag_name 至远程]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git push origin --tags      [推送所有标签至远程]</span></span><br><span class=\"line\"><span class=\"comment\">#   删除远程标签 [先删除本地标签，再推送至远程。命令格式如下：]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git tag -d &lt;tag_name&gt; &amp;&amp; git push origin :refs/tags/&lt;tag_name&gt;</span></span><br><span class=\"line\">~$ git tag <span class=\"string\">\"remote_tag\"</span></span><br><span class=\"line\">~$ git push origin remote_tag</span><br><span class=\"line\">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">To https://bitbucket.org/wangwg/git_bitbucket.git</span><br><span class=\"line\">* [new tag]         remote_tag -&gt; remote_tag</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git push origin --tags</span><br><span class=\"line\">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">To https://bitbucket.org/wangwg/git_bitbucket.git</span><br><span class=\"line\">* [new tag]         old_label -&gt; old_label</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git tag -d <span class=\"string\">\"old_label\"</span> &amp;&amp; git push origin :refs/tags/old_label</span><br><span class=\"line\">Deleted tag <span class=\"string\">'old_label'</span> (was e7347a9)</span><br><span class=\"line\">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">To https://bitbucket.org/wangwg/git_bitbucket.git</span><br><span class=\"line\">- [deleted]         old_label</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>远程 bitbucket 网页标签管理</p>\n<p><img src=\"/images/git_bitbucket/11_bitbucket_add_tag.png\" alt=\"使用 Sourcetree 查看标签列表及删除标签\" class=\"article-img\"></p>\n</li>\n</ol>\n</li>\n</ul>\n<h3><span id=\"创建删除分支\"><span id=\"git-branch\">创建/删除分支</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>分支概念：分本地分支和远程分支。本地分支与远程分支要想同步，必须经过主动的拉去或推送。</p>\n<p>仓库创建时，默认为 master 主分支，一般会增加 Develop 分支作为开发使用，feature 分支作为临时分支，以及 bug 分支作为临时 bug 修复分支。</p>\n<p>创建分支，分本地创建及远程创建两种方式。</p>\n<ol>\n<li><p>本地创建分支，可分命令行及 Sourcetree 工具创建。示例分别如下：</p>\n<ul>\n<li><p>命令行创建及删除分支</p>\n <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git branch 命令使用说明：</span></span><br><span class=\"line\"><span class=\"comment\">#   * git branch             [显示仓库分支列表]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git branch develop     [创建分支 develop ]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git branch -d develop  [删除分支 develop ]</span></span><br><span class=\"line\">~$ git branch</span><br><span class=\"line\">* master</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git branch develop</span><br><span class=\"line\">~$ git branch</span><br><span class=\"line\">  develop</span><br><span class=\"line\">* master</span><br><span class=\"line\"></span><br><span class=\"line\">~$ git branch -d develop</span><br><span class=\"line\">Deleted branch develop (was 83ac3e1).</span><br><span class=\"line\">~$ git branch</span><br><span class=\"line\">* master</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>Sourcetree创建及删除分支</p>\n<p> <img src=\"/images/git_bitbucket/12_sourcetree_create_branch.png\" alt=\"使用 Sourcetree 创建分支\" class=\"article-img\"><br> <img src=\"/images/git_bitbucket/12_sourcetree_list_delete1_branch.png\" alt=\"使用 Sourcetree 删除分支\" class=\"article-img\"><br> <img src=\"/images/git_bitbucket/12_sourcetree_list_delete2_branch.png\" alt=\"使用 Sourcetree 删除分支\" class=\"article-img\"></p>\n</li>\n</ul>\n</li>\n<li><p>bitbucket 网址远程创建分支。</p>\n<p><img src=\"/images/git_bitbucket/12_bitbucket_create_branch.png\" alt=\"bitbucket 创建分支\" class=\"article-img\"><br><img src=\"/images/git_bitbucket/12_bitbucket_delete_branch.png\" alt=\"bitbucket 创建分支\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"切换分支\"><span id=\"git-checkout\">切换分支</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>分支及分支切换的好处是： 你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</p>\n<p>本地仓库切换分支方式有两种，远程仓库由管理人员操作及管理，此处不涉及。</p>\n<ol>\n<li><p>命令行</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换分支命令有两个， checkout 和 switch，为防止 git 版本陈旧，推荐使用 checkout 进行切换分支操作</span></span><br><span class=\"line\"><span class=\"comment\">#   * git checkout develop   [切换到 develop 分支]</span></span><br><span class=\"line\"><span class=\"comment\">#   * git switch -c develop  [同上, git version &gt;= 2.23]</span></span><br><span class=\"line\">~$ git checkout develop</span><br><span class=\"line\">Switched to branch <span class=\"string\">'develop'</span></span><br><span class=\"line\">Your branch is up to date with <span class=\"string\">'origin/develop'</span>.</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>sourcetree 工具</p>\n<p><img src=\"/images/git_bitbucket/13_sourcetree_switch_branch.png\" alt=\"使用 Sourcetree 切换分支\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"合并分支\"><span id=\"git-merge\">合并分支</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>合并分支，本地、远程皆可合并。但为了更好地协作工作，常见操作为，本地创建临时分支 feature，修订后，推送到 origin/feature， 在远程进行 pull request 后进行合并。</p>\n<p>这里只介绍本地命令行合并及远程 bitbucket 网页上进行 pull request 后合并方式。</p>\n<ol>\n<li><p>本地命令行合并</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 合并分支 develop -&gt; master 基本流程如下：</span></span><br><span class=\"line\"><span class=\"comment\"># 0. 当前分支为 develop</span></span><br><span class=\"line\">~$ git branch</span><br><span class=\"line\">* develop</span><br><span class=\"line\">  master</span><br><span class=\"line\"><span class=\"comment\"># 1. 操作 ...</span></span><br><span class=\"line\">~$ vi add_demo.txt</span><br><span class=\"line\"><span class=\"comment\"># 2. 当前分支提交该变更</span></span><br><span class=\"line\">~$ git add add_demo.txt</span><br><span class=\"line\">~$ git commit -m <span class=\"string\">\"merge branch test\"</span></span><br><span class=\"line\">[develop 732919e] merge branch <span class=\"built_in\">test</span></span><br><span class=\"line\">1 file changed, 2 insertions(+)</span><br><span class=\"line\"><span class=\"comment\"># 3. 切换分支到 master</span></span><br><span class=\"line\">~$ git checkout master</span><br><span class=\"line\">Switched to branch <span class=\"string\">'master'</span></span><br><span class=\"line\">Your branch is up to date with <span class=\"string\">'origin/master'</span>.</span><br><span class=\"line\"><span class=\"comment\"># 4. 将 develop 的内容合并到当前分支 master</span></span><br><span class=\"line\">~$ git merge develop</span><br><span class=\"line\">Updating 83ac3e1..732919e</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\">add_demo.txt | 2 ++</span><br><span class=\"line\">1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>bitbucket pull request 后合并</p>\n<ol>\n<li>假设 develop 分支已提交变更并推送到远程 origin/develop</li>\n<li>先进行请求 pr， 待相关人员进行 review 后，由仓库特定管理人员进行 merge。<br><img src=\"/images/git_bitbucket/14_bitbucket_pull_request.png\" alt=\"bitbucket 发送请求\"><br><img src=\"/images/git_bitbucket/14_bitbucket_merge_branch.png\" alt=\"bitbucket 合并分支\"></li>\n</ol>\n</li>\n</ol>\n<h3><span id=\"拉取远程仓库分支最新版本\"><span id=\"git-pull\">拉取远程仓库分支最新版本</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>当你从远程仓库克隆时，实际上 Git 自动把本地的 master 分支和远程的 master 分支对应起来了，并且，远程仓库的默认名称是 origin 。</p>\n<p>本地拉取远程仓库分支最新版本，方式分命令行和 sourcetree 工具拉取。此处不涉及冲突，后面单独介绍。</p>\n<ol>\n<li><p>命令行拉取远程分支版本</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git remote 查看远程库的信息</span></span><br><span class=\"line\">~$ git remote -v</span><br><span class=\"line\">origin  https://wangwg@bitbucket.org/wangwg/git_bitbucket.git (fetch)</span><br><span class=\"line\">origin  https://wangwg@bitbucket.org/wangwg/git_bitbucket.git (push)</span><br><span class=\"line\"><span class=\"comment\"># 只拉取当前分支对应的远程分支， master &lt;- origin/master</span></span><br><span class=\"line\"><span class=\"comment\"># 当前分支 master 与远程 origin/master 不一致，拉取结果如下：</span></span><br><span class=\"line\">~$ git pull</span><br><span class=\"line\">Updating 3c7c3fb..83ac3e1</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\">README.md | 3 ++-</span><br><span class=\"line\">1 file changed, 2 insertions(+), 1 deletion(-)</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>sourcetree 工具拉取远程分支版本</p>\n<p><img src=\"/images/git_bitbucket/15_sourcetree_pull_branch.png\" alt=\"sourcetree 拉取分支\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"推送到远程对应仓库分支\"><span id=\"git-push\">推送到远程对应仓库分支</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>推送本地仓库分支到远程，与拉取类似。方式两种如下。</p>\n<ol>\n<li><p>命令行推送分支至远程仓库</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 【前提】推送分支到远程是已与远程仓库进行了关联。</span></span><br><span class=\"line\"><span class=\"comment\"># 克隆仓库一般都会关联好本地仓库和远程仓库。但假设本地手动新建一个文件夹，想要关联远程的某一个仓库，此时可使用以下命令进行关联：</span></span><br><span class=\"line\"><span class=\"comment\">#    git remote add origin git@server-name:path/repo-name.git</span></span><br><span class=\"line\"><span class=\"comment\"># 手动关联后，使用命令git push -u origin master第一次推送master分支的所有内容；此后，每次本地提交后，只使用命令git push origin master 即可推送最新修改；</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 推送分支命令格式如下：</span></span><br><span class=\"line\"><span class=\"comment\">#   git push origin &lt;branch&gt;  [推送分支 branch 至 origin/branch]</span></span><br><span class=\"line\">~$ git push origin master</span><br><span class=\"line\">Enumerating objects: 9, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Counting objects: 100% (8/8), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Delta compression using up to 4 threads</span><br><span class=\"line\">Compressing objects: 100% (4/4), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Writing objects: 100% (5/5), 578 bytes | 578.00 KiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Total 5 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">To https://bitbucket.org/wangwg/git_bitbucket.git</span><br><span class=\"line\">   83ac3e1..99e0ef9  master -&gt; master</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>sourcetree 工具推送分支至远程仓库</p>\n<p><img src=\"/images/git_bitbucket/16_sourcetree_push_branch.png\" alt=\"sourcetree 推送分支\" class=\"article-img\"></p>\n</li>\n</ol>\n<h3><span id=\"解决冲突\"><span id=\"git-fix-conflict\">解决冲突</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>冲突，指的是在你使用 “git push origin \\&lt;branch>“ 推送分支版本到远程时，别人在你之前推送了一个版本。恰巧此时，你所修改的某一文件和他人修订内容不一致。此时需要解决该问题，简称为 “解决冲突”。</p>\n<p>具体可参考以下案例：</p>\n   <figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前置条件： 当前刚从远程服务器克隆仓库 develop 分支</span></span><br><span class=\"line\"><span class=\"comment\"># 修改 add_demo.txt,尾行增加 “local add message”</span></span><br><span class=\"line\">~$ vi add_demo.txt</span><br><span class=\"line\">~$ git add . &amp;&amp; git commit -m <span class=\"string\">\"add local message\"</span></span><br><span class=\"line\"><span class=\"comment\"># 此时，手动在 bitbucket 远程服务器上修改 add_demo.txt 文件，尾行增加 “remote add message”，模拟他人提交版本至远程 develop 分支</span></span><br><span class=\"line\">~$ git push origin develop</span><br><span class=\"line\">To https://bitbucket.org/wangwg/git_bitbucket.git</span><br><span class=\"line\">! [rejected]        develop -&gt; develop (fetch first)</span><br><span class=\"line\">error: failed to push some refs to <span class=\"string\">'https://wangwg@bitbucket.org/wangwg/git_bitbucket.git'</span></span><br><span class=\"line\">hint: Updates were rejected because the remote contains work that you <span class=\"keyword\">do</span></span><br><span class=\"line\">hint: not have locally. This is usually caused by another repository pushing</span><br><span class=\"line\">hint: to the same ref. You may want to first integrate the remote changes</span><br><span class=\"line\">hint: (e.g., <span class=\"string\">'git pull ...'</span>) before pushing again.</span><br><span class=\"line\">hint: See the <span class=\"string\">'Note about fast-forwards'</span> <span class=\"keyword\">in</span> <span class=\"string\">'git push --help'</span> <span class=\"keyword\">for</span> details.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 报错提示&gt;  hint: not have locally. This is usually caused by another repository pushing</span></span><br><span class=\"line\"><span class=\"comment\"># 此时拉取远程分支到本地，可察觉发生了 Auto-merging add_demo.txt， 但失败了。</span></span><br><span class=\"line\">~$ git pull</span><br><span class=\"line\">remote: Counting objects: 3, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (2/2), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Total 3 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">Unpacking objects: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">From https://bitbucket.org/wangwg/git_bitbucket</span><br><span class=\"line\">   99e0ef9..96e69e9  develop    -&gt; origin/develop</span><br><span class=\"line\">Auto-merging add_demo.txt</span><br><span class=\"line\">CONFLICT (content): Merge conflict <span class=\"keyword\">in</span> add_demo.txt</span><br><span class=\"line\">Automatic merge failed; fix conflicts and <span class=\"keyword\">then</span> commit the result.</span><br><span class=\"line\"><span class=\"comment\"># 此时，查看add_demo.txt</span></span><br><span class=\"line\">~$ cat add_demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\">hhhhhh</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">add <span class=\"built_in\">local</span> message</span><br><span class=\"line\">=======</span><br><span class=\"line\">add remote message</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 96e69e94c07c7ebb665b22c8cf8d53646232ec05</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容</span></span><br><span class=\"line\"><span class=\"comment\"># 修改 add_demo.txt 文件内容为 “add local message after remote message” 后，提交变更再推送。</span></span><br><span class=\"line\">~$ vi add_demo.txt</span><br><span class=\"line\">~$ git add add_demo.txt &amp;&amp; git commit -m <span class=\"string\">\"fix-conflict\"</span></span><br><span class=\"line\">[develop da20742] fix-conflict</span><br><span class=\"line\">~$ git push origin develop</span><br><span class=\"line\">Enumerating objects: 10, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Counting objects: 100% (10/10), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Delta compression using up to 4 threads</span><br><span class=\"line\">Compressing objects: 100% (4/4), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Writing objects: 100% (6/6), 607 bytes | 607.00 KiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Total 6 (delta 0), reused 0 (delta 0)</span><br><span class=\"line\">remote:</span><br><span class=\"line\">remote: Create pull request <span class=\"keyword\">for</span> develop:</span><br><span class=\"line\">remote:   https://bitbucket.org/wangwg/git_bitbucket/pull-requests/new?<span class=\"built_in\">source</span>=develop&amp;t=1</span><br><span class=\"line\">remote:</span><br><span class=\"line\">To https://bitbucket.org/wangwg/git_bitbucket.git</span><br><span class=\"line\">   96e69e9..da20742  develop -&gt; develop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 冲突解决</span></span><br></pre></td></tr></table></div></figure>\n<h3><span id=\"命令行文档\"><span id=\"git-help\">命令行文档</span></span><a href=\"2020/02/17/git_bitbucket#undefined\"></a></h3><p>git help 命令用来显示任何命令的 Git 自带文档。对于每一个命令的完整的可选项及标志列表，你可以随时运行 git help \\&lt;command> 命令来了解。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ git <span class=\"built_in\">help</span></span><br><span class=\"line\">usage: git [--version] [--<span class=\"built_in\">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class=\"line\">           [--<span class=\"built_in\">exec</span>-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class=\"line\">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class=\"line\">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class=\"line\">           &lt;<span class=\"built_in\">command</span>&gt; [&lt;args&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\">These are common Git commands used <span class=\"keyword\">in</span> various situations:</span><br><span class=\"line\"></span><br><span class=\"line\">start a working area (see also: git <span class=\"built_in\">help</span> tutorial)</span><br><span class=\"line\">   [+] <span class=\"built_in\">clone</span>      Clone a repository into a new directory</span><br><span class=\"line\">   [+] init       Create an empty Git repository or reinitialize an existing one</span><br><span class=\"line\"></span><br><span class=\"line\">work on the current change (see also: git <span class=\"built_in\">help</span> everyday)</span><br><span class=\"line\">   [+] add        Add file contents to the index</span><br><span class=\"line\">   [+] mv         Move or rename a file, a directory, or a symlink</span><br><span class=\"line\">   [+] reset      Reset current HEAD to the specified state</span><br><span class=\"line\">   [+] rm         Remove files from the working tree and from the index</span><br><span class=\"line\"></span><br><span class=\"line\">examine the <span class=\"built_in\">history</span> and state (see also: git <span class=\"built_in\">help</span> revisions)</span><br><span class=\"line\">   bisect     Use binary search to find the commit that introduced a bug</span><br><span class=\"line\">   grep       Print lines matching a pattern</span><br><span class=\"line\">   [+] <span class=\"built_in\">log</span>        Show commit logs</span><br><span class=\"line\">   show       Show various types of objects</span><br><span class=\"line\">   [+] status     Show the working tree status</span><br><span class=\"line\"></span><br><span class=\"line\">grow, mark and tweak your common <span class=\"built_in\">history</span></span><br><span class=\"line\">   [+] branch     List, create, or delete branches</span><br><span class=\"line\">   [+] checkout   Switch branches or restore working tree files</span><br><span class=\"line\">   [+] commit     Record changes to the repository</span><br><span class=\"line\">   [+] diff       Show changes between commits, commit and working tree, etc</span><br><span class=\"line\">   [+] merge      Join two or more development histories together</span><br><span class=\"line\">   rebase     Reapply commits on top of another base tip</span><br><span class=\"line\">   [+] tag        Create, list, delete or verify a tag object signed with GPG</span><br><span class=\"line\"></span><br><span class=\"line\">collaborate (see also: git <span class=\"built_in\">help</span> workflows)</span><br><span class=\"line\">   [+] fetch      Download objects and refs from another repository</span><br><span class=\"line\">   [+] pull       Fetch from and integrate with another repository or a <span class=\"built_in\">local</span> branch</span><br><span class=\"line\">   [+] push       Update remote refs along with associated objects</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'git help -a'</span> and <span class=\"string\">'git help -g'</span> list available subcommands and some</span><br><span class=\"line\">concept guides. See <span class=\"string\">'git help &lt;command&gt;'</span> or <span class=\"string\">'git help &lt;concept&gt;'</span></span><br><span class=\"line\">to <span class=\"built_in\">read</span> about a specific subcommand or concept.</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"测试用例分层机制","link":"2020/02/25/测试用例分层机制"},"next":{"title":"所谓成长","link":"2020/01/20/所谓成长"},"plink":"http://yoursite.com/2020/02/17/git_bitbucket/","toc":[{"title":"相关软件</span>","id":"相关软件","index":"1"},{"title":"Sourcetree 工具介绍</span>","id":"sourcetree-工具介绍","index":"2"},{"title":"工作区与暂存区介绍</span>","id":"工作区与暂存区介绍","index":"3"},{"title":"Git 命令介绍</span>","id":"git-命令介绍","index":"4","children":[{"title":"创建仓库</span></span>","id":"git-init","index":"4.1"},{"title":"克隆仓库</span></span>","id":"git-clone","index":"4.2"},{"title":"获取仓库文件状态</span></span>","id":"git-status","index":"4.3"},{"title":"显示版本记录</span></span>","id":"git-log","index":"4.4"},{"title":"增加文件</span></span>","id":"git-add","index":"4.5"},{"title":"删除文件</span></span>","id":"git-rm","index":"4.6"},{"title":"重命名文件</span></span>","id":"git-mv","index":"4.7"},{"title":"提交变更</span></span>","id":"git-commit","index":"4.8"},{"title":"版本比对</span></span>","id":"git-diff","index":"4.9"},{"title":"恢复版本</span></span>","id":"git-reset","index":"4.10"},{"title":"临时储存工作区</span></span>","id":"git-stash","index":"4.11"},{"title":"标签管理</span></span>","id":"git-tag","index":"4.12"},{"title":"创建/删除分支</span></span>","id":"git-branch","index":"4.13"},{"title":"切换分支</span></span>","id":"git-checkout","index":"4.14"},{"title":"合并分支</span></span>","id":"git-merge","index":"4.15"},{"title":"拉取远程仓库分支最新版本</span></span>","id":"git-pull","index":"4.16"},{"title":"推送到远程对应仓库分支</span></span>","id":"git-push","index":"4.17"},{"title":"解决冲突</span></span>","id":"git-fix-conflict","index":"4.18"},{"title":"命令行文档</span></span>","id":"git-help","index":"4.19"}]}],"copyright":{"license":"unknown","published":"February 17, 2020","updated":"February 17, 2020","author":"wangwg"}}