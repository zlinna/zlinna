{"title":"查找算法之二分查找","date":"2019-05-08T08:50:38.072Z","date_formatted":{"ll":"May 8, 2019","L":"05/08/2019","MM-DD":"05-08"},"link":"2019/05/08/查找算法之二分查找","comments":true,"tags":["Python"],"categories":["算法"],"updated":"2020-01-06T16:11:27.109Z","content":"<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>查找算法</th>\n<th>平均时间复杂度</th>\n<th>空间复杂度</th>\n<th>查找条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>顺序查找</td>\n<td>O(n)</td>\n<td>O(1)</td>\n<td>无序或有序</td>\n</tr>\n<tr>\n<td>二分查找(折半查找)</td>\n<td>O(log~2~n)</td>\n<td>O(1)</td>\n<td>有序</td>\n</tr>\n<tr>\n<td>插值查找</td>\n<td>O(log~2~(log~2~n))</td>\n<td>O(1)</td>\n<td>有序</td>\n</tr>\n<tr>\n<td>斐波那契查找</td>\n<td>O(log~2~n)</td>\n<td>O(1)</td>\n<td>有序</td>\n</tr>\n<tr>\n<td>哈希查找</td>\n<td>O(1)</td>\n<td>O(n)</td>\n<td>无序或有序</td>\n</tr>\n</tbody>\n</table></div></div>\n<a id=\"more\"></a>\n<h1><span id=\"二分查找\">二分查找</span><a href=\"2019/05/08/查找算法之二分查找#undefined\"></a></h1><h3><span id=\"原理\">原理</span><a href=\"2019/05/08/查找算法之二分查找#undefined\"></a></h3><p>二分查找针对的是一个有序的数据集合，查找思想有点类似分治思想。每次都通过跟区间的中间元素对比，将待查找的区间缩小为之前的一半，直到找到要查找的元素，或者区间被缩小为0。 </p>\n<h3><span id=\"二分查找应用场景的局限性\">二分查找应用场景的局限性</span><a href=\"2019/05/08/查找算法之二分查找#undefined\"></a></h3><p>二分查找的时间复杂度是 O(logn)，查找数据的效率非常高。但应用场景有很大局限性。</p>\n<ol>\n<li><p>二分查找依赖的是顺序表结构(eg: 数组)</p>\n</li>\n<li><p>二分查找针对的有序数据</p>\n</li>\n<li><p>数据量太小或太大均不适合使用二分查找 ( 数据量小的话，使用顺序查找；数据量大的话，由于依赖的是数组该数据结构，需要连续的大内存空间。而内存中会出现无这么大的内存块，导致申请空间失败)</p>\n</li>\n</ol>\n<p><strong>[注意点]</strong>  容易出错的细节有：终止条件、区间上下界更新方法、返回值选择</p>\n<h3><span id=\"简单实现\">简单实现</span><a href=\"2019/05/08/查找算法之二分查找#undefined\"></a></h3><p>递归与非递归简单实现如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearch</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    \t\t非递归实现</span></span><br><span class=\"line\"><span class=\"string\">    \t\"\"\"</span></span><br><span class=\"line\">        low = <span class=\"number\">0</span></span><br><span class=\"line\">        high = len(nums)<span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (low &lt;= high):</span><br><span class=\"line\">            <span class=\"comment\"># mid = (low + high) // 2</span></span><br><span class=\"line\">            <span class=\"comment\"># mid = low + (high - low) // 2  # 比上述的优点是: 防止数组过大，(low+high)越界</span></span><br><span class=\"line\">            mid = low + (high - low) &gt;&gt; <span class=\"number\">1</span>  <span class=\"comment\"># 比上述的优点是: 位运算比除法运算要快得多</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[mid] == target):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> (nums[mid] &lt; target):</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br></pre></td></tr></table></div></figure>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearch</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        \t递归实现</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.bsearchInternally(nums, <span class=\"number\">0</span>, len(nums)<span class=\"number\">-1</span>, target)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearchInternally</span><span class=\"params\">(self, nums: List[int], low: int, high: int, target: int )</span> -&gt; int:</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> low &gt; high:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        mid = low + (high - low) &gt;&gt; <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> nums[mid] == target:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mid</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> nums[mid] &lt; target:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.bsearchInternally(nums, mid+<span class=\"number\">1</span>, high, target)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.bsearchInternally(nums, low, mid<span class=\"number\">-1</span>, target)</span><br></pre></td></tr></table></div></figure>\n<h3><span id=\"变形问题\">变形问题</span><a href=\"2019/05/08/查找算法之二分查找#undefined\"></a></h3><p>常见的二分查找变形问题</p>\n<ul>\n<li>查找第一个值等于给定值的元素</li>\n<li>查找最后一个值等于给定值的元素</li>\n<li>查找第一个大于等于给定值的元素</li>\n<li>查找最后一个小于等于给定值的元素</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearch_0</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        \t查找第一个值等于给定值的元素</span></span><br><span class=\"line\"><span class=\"string\">        \tInput:  nums = [1, 3, 4, 4, 4, 5, 7]</span></span><br><span class=\"line\"><span class=\"string\">            \t\ttarget = 4</span></span><br><span class=\"line\"><span class=\"string\">            Output: 2</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        low = <span class=\"number\">0</span></span><br><span class=\"line\">        high = len(nums) - <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt;= high):</span><br><span class=\"line\">            mid = low + (high - low) &gt;&gt; <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> nums[mid] &gt; target:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> nums[mid] &lt; target:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"comment\"># 更改相等时 逻辑处理</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == mid) <span class=\"keyword\">or</span> nums[mid - <span class=\"number\">1</span>] != target</span><br><span class=\"line\">                \t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearch_1</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        \t查找最后一个值等于给定值的元素</span></span><br><span class=\"line\"><span class=\"string\">        \tInput:  nums = [1, 3, 4, 4, 4, 5, 7]</span></span><br><span class=\"line\"><span class=\"string\">            \t\ttarget = 4</span></span><br><span class=\"line\"><span class=\"string\">            Output: 4</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        low = <span class=\"number\">0</span></span><br><span class=\"line\">        high = len(nums) - <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt;= high):</span><br><span class=\"line\">            mid = low + (high - low) &gt;&gt; <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> nums[mid] &gt; target:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> nums[mid] &lt; target:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"comment\"># 更改相等时 逻辑处理</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == mid) <span class=\"keyword\">or</span> nums[mid + <span class=\"number\">1</span>] != target</span><br><span class=\"line\">                \t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearch_2</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        \t查找第一个大于等于给定值的元素</span></span><br><span class=\"line\"><span class=\"string\">        \tInput:  nums = [1, 3, 4, 4, 4, 5, 7]</span></span><br><span class=\"line\"><span class=\"string\">            \t\ttarget = 3</span></span><br><span class=\"line\"><span class=\"string\">            Output: 2</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        low = <span class=\"number\">0</span></span><br><span class=\"line\">        high = len(nums) - <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt;= high):</span><br><span class=\"line\">            mid = low + (high - low) &gt;&gt; <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> nums[mid] &gt;= target:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == mid) <span class=\"keyword\">or</span> (nums[mid - <span class=\"number\">1</span>] &lt; target):</span><br><span class=\"line\">                \t<span class=\"keyword\">return</span> mid</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                low = mid + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bsearch_3</span><span class=\"params\">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        \t查找最后一个小于等于给定值的元素</span></span><br><span class=\"line\"><span class=\"string\">        \tInput:  nums = [1, 3, 4, 4, 4, 5, 7]</span></span><br><span class=\"line\"><span class=\"string\">            \t\ttarget = 5</span></span><br><span class=\"line\"><span class=\"string\">            Output: 4</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    \tlow = <span class=\"number\">0</span></span><br><span class=\"line\">        high = len(nums) - <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt;= high):</span><br><span class=\"line\">            mid = low + (high - low) &gt;&gt; <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> nums[mid] &lt;= target:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == mid) <span class=\"keyword\">or</span> (nums[mid + <span class=\"number\">1</span>] &gt; target):</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> mid</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    low = mid + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                high = mid - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"软件可测试性","link":"2019/05/11/软件可测性"},"next":{"title":"复杂度分析","link":"2019/05/01/复杂度分析"},"plink":"http://yoursite.com/2019/05/08/查找算法之二分查找/","toc":[{"title":"二分查找</span>","id":"二分查找","index":"1"}]}