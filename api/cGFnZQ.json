{"per_page":8,"total":3,"current":1,"data":[{"title":"wangwg","date":"2019-09-04T23:50:37.552Z","date_formatted":{"ll":"Sep 5, 2019","L":"09/05/2019","MM-DD":"09-05"},"excerpt":"<p>Try again, please!</p>","link":"2019/09/05/wangwg","tags":["zlinna"],"categories":["myself"]},{"title":"光圈、景深与快门","date":"2020-08-08T05:45:48.116Z","date_formatted":{"ll":"Aug 8, 2020","L":"08/08/2020","MM-DD":"08-08"},"excerpt":"<h2 id=\"概念\">概念<a href=\"2020/08/08/摄影入门-光圈-景深-快门#概念\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 概念关系</span><br><span class=\"line\"></span><br><span class=\"line\">    15-45 mm 焦段</span><br><span class=\"line\">        ｜</span><br><span class=\"line\">        45 mm 焦距</span><br><span class=\"line\">        ｜</span><br><span class=\"line\">        1/45 s 安全快门速度 &lt; 快门速度  ==&gt; 基本保证画面不会因为手抖而拍糊拍虚</span><br><span class=\"line\"></span><br><span class=\"line\">    景深：焦点前后，前景深、后景深</span><br><span class=\"line\">    物距：物镜离拍摄物体的距离</span><br><span class=\"line\">    减光镜：放止过度曝光，减弱曝光</span><br><span class=\"line\"></span><br><span class=\"line\">2. 影响关系</span><br><span class=\"line\"></span><br><span class=\"line\">  ^ 景深越大                          画面亮度</span><br><span class=\"line\">  + a. 光圈的 F 值调大(光圈调小)  --+</span><br><span class=\"line\">  + b. 焦距改小(ex.45mm -&gt; 28mm)  +   a. 快门速度减慢，增加曝光时间</span><br><span class=\"line\">  + c. 拉长物距                   +   b. 调高感光度 ISO， 但会增加噪点</span><br><span class=\"line\">  ===========================================================</span><br><span class=\"line\">  -                               +</span><br><span class=\"line\">  -                                --&gt; c.光圈的 F 值调大(光圈调小)</span><br><span class=\"line\">  -</span><br></pre></td></tr></table></div></figure>","link":"2020/08/08/摄影入门-光圈-景深-快门","tags":["摄像"],"categories":["photo"]},{"title":"MySQL 水平|垂直切分","date":"2020-03-01T14:35:41.129Z","date_formatted":{"ll":"Mar 1, 2020","L":"03/01/2020","MM-DD":"03-01"},"excerpt":"<p>对于数据量比较大的表， 可以利用 MySQL 的水平切分或垂直切分的功能对数据表进行优化。</p>\n<h2 id=\"垂直切分\">垂直切分<a href=\"2020/03/01/MySQL 水平|垂直切分#垂直切分\"></a></h2><p>功能描述: 用户信息的数据库表( tb_user ) 由于保存的很多信息， 这个表需要有特别多的列( Column ) ， 我们可以把用户的一部分信息(比如：家庭地址 Address 等) ， 存入另一个表。这里当然要有一个相同的主键user_id连接两个表。这种方式也可称为：row spliting。</p>\n<p>比较常用的垂直切分技术， 把一些变动较少的列放在一个表中( table 1 ) ， 然后把一些经常会变动的列放在另一个表中( table 2 ) ， 这样可以更高效的利用变动少的表( table 1 ) 中的查询缓存( Query cache ) ， 从而提升这部分数据的查询速度。</p>","link":"2020/03/01/MySQL 水平|垂直切分","tags":["MySQL"],"categories":["编程"]},{"title":"测试用例分层机制","date":"2020-02-25T05:26:15.138Z","date_formatted":{"ll":"Feb 25, 2020","L":"02/25/2020","MM-DD":"02-25"},"excerpt":"<p>测试用例分层机制的核心是将接口定义、测试步骤、测试用例、测试场景进行分离，单独进行描述和维护，从而尽可能地减少<code>自动化测试用例</code>的维护成本。</p>\n<ul>\n<li>测试用例（testcase）应该是完整且独立的，每条测试用例应该都是可以独立运行的</li>\n<li>测试用例~/场景~是测试步骤（teststep）的<code>有序</code>集合，每一个测试步骤对于一个 API 接口的描述</li>\n<li>测试组~/集~（testsuite）是测试用例的<code>无序</code>集合，集合中的测试用例应该都是相互独立，不存在前后依赖关系的；若确实存在先后依赖关系，可以在测试用例中完成依赖的处理，比如 <code>push case_pre</code> + <code>cur_case</code></li>\n</ul>","link":"2020/02/25/测试用例分层机制","tags":["测试理论"],"categories":["test"]},{"title":"Git 命令使用场景及说明","date":"2020-02-17T12:06:42.497Z","date_formatted":{"ll":"Feb 17, 2020","L":"02/17/2020","MM-DD":"02-17"},"excerpt":"<h2 id=\"相关软件\">相关软件<a href=\"2020/02/17/git_bitbucket#相关软件\"></a></h2><p><a href=\"https://git-scm.com\" target=\"_blank\" rel=\"noopener\">Git</a> &nbsp; <a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"noopener\">Bitbucket</a> &nbsp; <a href=\"https://www.sourcetreeapp.com/\" target=\"_blank\" rel=\"noopener\">Sourcetree</a></p>","link":"2020/02/17/git_bitbucket","tags":["Git"],"categories":["编程"]},{"title":"所谓成长","date":"2020-01-20T11:54:52.856Z","date_formatted":{"ll":"Jan 20, 2020","L":"01/20/2020","MM-DD":"01-20"},"excerpt":"<h2 id=\"2-5-年所谓成长\">2.5 年所谓成长<a href=\"2020/01/20/所谓成长#2-5-年所谓成长\"></a></h2><p>时间恍然而过。等的人已杳无音信，还好梦想还是梦想，还在那。 ⚔︎</p>\n<ul>\n<li>2017.07.01 本科毕业</li>\n<li>2017.07.06 入职</li>\n<li>2020.01.20 在家（放假中）</li>\n</ul>","link":"2020/01/20/所谓成长","tags":["zlinna"],"categories":["myself"]},{"title":"2020","date":"2019-12-28T05:08:38.827Z","date_formatted":{"ll":"Dec 28, 2019","L":"12/28/2019","MM-DD":"12-28"},"excerpt":"<p>技术栈扩充</p>\n<ol>\n<li>Robot Framework training - expand</li>\n<li>postman training</li>\n<li>fiddler、wireshark training</li>\n<li>go、react training</li>\n<li>python + redis training</li>\n<li>python 仿 tf 实现 restful 接口测试框架 demo</li>\n<li>MongoDB</li></ol>","link":"2019/12/28/2020","tags":["zlinna"],"categories":["myself"]},{"title":"测试用例分类","date":"2019-12-14T09:33:04.162Z","date_formatted":{"ll":"Dec 14, 2019","L":"12/14/2019","MM-DD":"12-14"},"excerpt":"<h2 id=\"测试用例的-15-个分类\">测试用例的 15 个分类<a href=\"2019/12/14/测试用例分类#测试用例的-15-个分类\"></a></h2><div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>分类</th>\n<th>说明</th>\n<th>常见场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>能力测试</td>\n<td>确保程序的目标功能实现</td>\n<td>可当作功能（接口层）测试。前置条件、输入项（…）、内部处理流程（…）、输出项（输出参数<br>、数据库/配置文件/全局变量更新、返回值、输出文件/报告、日志等）等</td>\n</tr>\n<tr>\n<td>容量测试</td>\n<td>发现处理大容量数据时的程序异常</td>\n<td>如，数据表存储1w条时的插入、查找、删除效率等</td>\n</tr>\n<tr>\n<td>强度测试</td>\n<td>发现在大规模负载、高强度不间断持续的数据处理中的异常</td>\n<td>如，内存已被占用 80% 以上，软件是否能正常运行、…等</td>\n</tr>\n<tr>\n<td>可用性测试</td>\n<td>评估最终用户在使用软件并与软件交互时的可用性问题</td>\n<td>如，界面基本功能、所有按钮、异常恢复等</td>\n</tr>\n<tr>\n<td>安全性测试</td>\n<td>试图攻破程序的安全防线</td>\n<td>如，多线程测试、异常测试(sql注入)、异常恢复等</td>\n</tr>\n<tr>\n<td>性能测试</td>\n<td>评估程序的响应时间以及吞吐量瓶颈等</td>\n<td>根据性能指标及性能需求，针对性验证</td>\n</tr>\n<tr>\n<td>存储测试</td>\n<td>确保程序可以正确处理其对存储的需求，包括系统的存储和物理上的存储</td>\n<td>如，文件打包机制、系统最大限制 fd 个数、文件存储磁盘最大限制等</td>\n</tr>\n<tr>\n<td>配置测试</td>\n<td>检查程序是否能在推荐配置上流畅运行</td>\n<td>推荐或默认配置下运行正常，修改配置后，对应操作流程变更正确</td>\n</tr>\n<tr>\n<td>兼容性/转换测试</td>\n<td>评估新版本是否能兼容老的版本</td>\n<td>如，兼容老版本测试、 OS 等</td>\n</tr>\n<tr>\n<td>安装测试</td>\n<td>确保能够在所有支持的平台上安装软件</td>\n<td>如，linux、win、vxworks、centos等</td>\n</tr>\n<tr>\n<td>可靠性测试</td>\n<td>评估程序是否能达到规格说明书中的运行时长和 MTBF<br>（平均故障间隔时间）要求</td>\n<td>根据需求定义的某功能项对应运行时长指标，进行针对性的可靠性测试，关注运行时长、MTBF、异常处理等</td>\n</tr>\n<tr>\n<td>服务/可维护性测试</td>\n<td>测试系统恢复相关的功能是否按设计要求实现</td>\n<td>如，异常恢复、维护界面（软件恢复）等</td>\n</tr>\n<tr>\n<td>文档测试</td>\n<td>检验所有的用户文档是否正确</td>\n<td>如，文档评审等</td>\n</tr>\n<tr>\n<td>过程测试</td>\n<td>对软件系统操作或维护所需涉及的流程进行评估和确定</td>\n<td>如，文档评审、自测、冒烟测试等</td>\n</tr>\n</tbody>\n</table></div></div>","link":"2019/12/14/测试用例分类","tags":["测试理论"],"categories":["test"]}]}